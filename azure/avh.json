{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "alias": {
            "type": "string",
            "metadata": {
                "description": "Alias of the user deploying this template."
            },
            "defaultValue": ""
        },
        "tags": {
            "type": "object",
            "metadata": {
                "description": "Tags for the resources in this template."
            },
            "defaultValue": "[if(empty(parameters('alias')), json('{\"Project\": \"NaaS\"}'), json(concat('{\"Project\": \"NaaS\", \"Alias\": \"', parameters('alias'), '\"}')))]"
        },
        "environment": {
            "type": "string",
            "metadata": {
                "description": "Environment for the template. i.e. dev, pre-prod, prod"
            },
            "allowedValues": [
                "dev",
                "sbx",
                "staging",
                "preprod",
                "prod"
            ]
        },
        "location": {
            "type": "string",
            "metadata": {
                "description": "The location of the resources in this template."
            },
            "defaultValue": "southcentralus",
            "allowedValues": [
                "southcentralus",
                "eastus2",
                "westus",
                "usgovarizona",
                "usgovtexas",
                "usgoviowa",
                "usgovvirginia"
            ]
        },
        "networkSecurityGroupRules": {
            "type": "array",
            "defaultValue": []
        },
        "networkSecurityGroupSshSourceIP": {
            "type": "string",
            "metadata": {
                "description": "The Source IP Address(es) for accessing the VMs."
            },
            "defaultValue": "*"
        },
        "networkSecurityGroupSshRule": {
            "type": "array",
            "defaultValue": [
                {
                    "name": "Allow-SSH",
                    "properties": {
                        "description": "Allow SSH to the Host",
                        "priority": 100,
                        "protocol": "TCP",
                        "access": "Allow",
                        "direction": "Inbound",
                        "sourceAddressPrefix": "[parameters('networkSecurityGroupSshSourceIP')]",
                        "sourcePortRange": "*",
                        "destinationAddressPrefix": "*",
                        "destinationPortRange": "22"
                    }
                }
            ]
        },
        "enableAcceleratedNetworking": {
            "type": "bool",
            "defaultValue": true
        },
        "addressPrefixes": {
            "type": "array",
            "metadata": {
                "description": "The Address for the Virtual Network."
            },
            "defaultValue": [
                "10.0.0.0/16"
            ]
        },
        "publicIpAddressType": {
            "type": "string",
            "metadata": {
                "description": "The Public IP Address Type."
            },
            "defaultValue": "Dynamic"
        },
        "publicIpAddressSku": {
            "type": "string",
            "metadata": {
                "description": "The Public IP Address Sku."
            },
            "defaultValue": "Basic"
        },
        "osDiskType": {
            "type": "string",
            "defaultValue": "Premium_LRS"
        },
        "virtualMachineSize": {
            "type": "string",
            "defaultValue": "Standard_D16ds_v4"
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "The admin user for the vms"
            },
            "defaultValue": "xadmin"
        },
        "adminPublicKey": {
            "type": "securestring",
            "metadata": {
                "description": "The admin ssh public key to authenticate to the vms"
            }
        },
        "vmcount": {
            "type": "int",
            "metadata": {
                "description": "The number of Azure Virtualization Hosts to Deploy."
            },
            "defaultValue": 1,
            "minValue": 1,
            "maxValue": 5
        },
        "customScriptFileUri": {
            "type": "string",
            "metadata": {
                "description": "The URI to the custom script to be executed after the OS is deployed"
            }
        },
        "commandToExecute": {
            "type": "string",
            "metadata": {
                "description": "The command to execute the custom script"
            }
        }
    },
    "variables": {
        "vmComputerName": "avh",
        "vmName": "[concat('vm', variables('vmComputerName'))]"
    },
    "resources": [
        {
            "name": "nestedDeployment-step1-virtualMachines",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "properties": {
                "expressionEvaluationOptions": {
                    "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                    "tags": {
                        "value": "[parameters('tags')]"
                    },
                    "environment": {
                        "value": "[parameters('environment')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "networkSecurityGroupRules": {
                        "value": "[parameters('networkSecurityGroupRules')]"
                    },
                    "networkSecurityGroupSshRule": {
                        "value": "[parameters('networkSecurityGroupSshRule')]"
                    },
                    "addressPrefixes": {
                        "value": "[parameters('addressPrefixes')]"
                    },
                    "enableAcceleratedNetworking": {
                        "value": "[parameters('enableAcceleratedNetworking')]"
                    },
                    "publicIpAddressSku": {
                        "value": "[parameters('publicIpAddressSku')]"
                    },
                    "publicIpAddressType": {
                        "value": "[parameters('publicIpAddressType')]"
                    },
                    "virtualMachineSize": {
                        "value": "[parameters('virtualMachineSize')]"
                    },
                    "osDiskType": {
                        "value": "[parameters('osDiskType')]"
                    },
                    "vmName": {
                        "value": "[variables('vmName')]"
                    },
                    "vmComputerName": {
                        "value": "[variables('vmComputerName')]"
                    },
                    "vmCount": {
                        "value": "[parameters('vmcount')]"
                    },
                    "adminUsername": {
                        "value": "[parameters('adminUsername')]"
                    },
                    "adminPublicKey": {
                        "value": "[parameters('adminPublicKey')]"
                    }
                },
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "tags": {
                            "type": "object"
                        },
                        "environment": {
                            "type": "string"
                        },
                        "location": {
                            "type": "string"
                        },
                        "networkSecurityGroupRules": {
                            "type": "array"
                        },
                        "networkSecurityGroupSshRule": {
                            "type": "array"
                        },
                        "addressPrefixes": {
                            "type": "array"
                        },
                        "enableAcceleratedNetworking": {
                            "type": "bool"
                        },
                        "publicIpAddressSku": {
                            "type": "string"
                        },
                        "publicIpAddressType": {
                            "type": "string"
                        },
                        "virtualMachineSize": {
                            "type": "string"
                        },
                        "osDiskType": {
                            "type": "string"
                        },
                        "vmName": {
                            "type": "string"
                        },
                        "vmComputerName": {
                            "type": "string"
                        },
                        "vmCount": {
                            "type": "int"
                        },
                        "adminUsername": {
                            "type": "string"
                        },
                        "adminPublicKey": {
                            "type": "securestring"
                        }
                    },
                    "variables": {
                        "networkSecurityGroupName": "[concat('nsg-', parameters('environment'), '-001')]",
                        "virtualNetworkName": "[concat('vnet-', parameters('environment'), '-001')]",
                        "nicName": "[concat('nic-01-', parameters('environment'), '-', parameters('vmName'))]",
                        "publicIpAddressName": "[concat('pip-01-', parameters('environment'), '-', parameters('vmName'))]",
                        "nsgId": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]",
                        "vnetId": "[resourceId(resourceGroup().name, 'Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
                        "subnetName": "[concat('snet-', parameters('environment'), '-001')]",
                        "subnetRef": "[concat(variables('vnetId'), '/subnets/', variables('subnetName'))]",
                        "subnets": [
                            {
                                "name":"[variables('subnetName')]",
                                "properties": {
                                    "addressPrefix":"10.0.0.0/24"
                                }
                            }
                        ],
                        "networkSecurityGroupRules": "[union(parameters('networkSecurityGroupRules'), parameters('networkSecurityGroupSshRule'))]"
                    },
                    "resources": [
                        {
                            "type": "Microsoft.Network/networkInterfaces",
                            "apiVersion": "2020-11-01",
                            "name": "[concat(variables('nicName'), copyIndex(101))]",
                            "location": "[parameters('location')]",
                            "copy": {
                                "name": "copy",
                                "count": "[parameters('vmcount')]"
                            },
                            "dependsOn": [
                                "[concat('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]",
                                "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
                                "[concat('Microsoft.Network/publicIpAddresses/', concat(variables('publicIpAddressName'), copyIndex(101)))]"
                            ],
                            "tags": "[parameters('tags')]",
                            "properties": {
                                "ipConfigurations": [
                                    {
                                        "name": "ipconfig1",
                                        "properties": {
                                            "subnet": {
                                                "id": "[variables('subnetRef')]"
                                            },
                                            "privateIPAllocationMethod": "Dynamic",
                                            "publicIpAddress": {
                                                "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/publicIpAddresses', concat(variables('publicIpAddressName'), copyIndex(101)))]"
                                            }
                                        }
                                    }
                                ],
                                "enableAcceleratedNetworking": "[parameters('enableAcceleratedNetworking')]",
                                "networkSecurityGroup": {
                                    "id": "[variables('nsgId')]"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.Network/networkSecurityGroups",
                            "apiVersion": "2019-02-01",
                            "name": "[variables('networkSecurityGroupName')]",
                            "location": "[parameters('location')]",
                            "tags": "[parameters('tags')]",
                            "properties": {
                                "securityRules": "[variables('networkSecurityGroupRules')]"
                            }
                        },
                        {
                            "type": "Microsoft.Network/virtualNetworks",
                            "apiVersion": "2020-11-01",
                            "name": "[variables('virtualNetworkName')]",
                            "location": "[parameters('location')]",
                            "tags": "[parameters('tags')]",
                            "properties": {
                                "addressSpace": {
                                    "addressPrefixes": "[parameters('addressPrefixes')]"
                                },
                                "subnets": "[variables('subnets')]"
                            }
                        },
                        {
                            "type": "Microsoft.Network/publicIpAddresses",
                            "apiVersion": "2019-02-01",
                            "name": "[concat(variables('publicIpAddressName'), copyIndex(101))]",
                            "location": "[parameters('location')]",
                            "tags": "[parameters('tags')]",
                            "copy": {
                                "name": "copy",
                                "count": "[parameters('vmcount')]"
                            },     
                            "sku": {
                                "name": "[parameters('publicIpAddressSku')]"
                            },
                            "properties": {
                                "publicIpAllocationMethod": "[parameters('publicIpAddressType')]"
                            }
                        },
                        {
                            "type": "Microsoft.Compute/virtualMachines",
                            "apiVersion": "2021-07-01",
                            "name": "[concat(parameters('vmName'), copyIndex(101))]",
                            "location": "[parameters('location')]",
                            "dependsOn": [
                                "[concat('Microsoft.Network/networkInterfaces/', concat(variables('nicName'), copyIndex(101)))]"
                            ],
                            "copy": {
                                "name": "copy",
                                "count": "[parameters('vmcount')]"
                            },
                            "tags": "[parameters('tags')]",
                            "properties": {
                                "hardwareProfile": {
                                    "vmSize": "[parameters('virtualMachineSize')]"
                                },
                                "storageProfile": {
                                    "osDisk": {
                                        "createOption": "fromImage",
                                        "managedDisk": {
                                            "storageAccountType": "[parameters('osDiskType')]"
                                        }
                                    },
                                    "imageReference": {
                                        "publisher": "canonical",
                                        "offer": "0001-com-ubuntu-server-focal",
                                        "sku": "20_04-lts-gen2",
                                        "version": "latest"
                                    }
                                },
                                "networkProfile": {
                                    "networkInterfaces": [
                                        {
                                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicName'), copyIndex(101)))]"
                                        }
                                    ]
                                },
                                "osProfile": {
                                    "computerName": "[concat(parameters('vmComputerName'), copyIndex(101))]",
                                    "adminUsername": "[parameters('adminUsername')]",
                                    "linuxConfiguration": {
                                        "disablePasswordAuthentication": true,
                                        "ssh": {
                                            "publicKeys": [
                                                {
                                                    "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                                                    "keyData": "[parameters('adminPublicKey')]"
                                                }
                                            ]
                                        }
                                    }
                                },
                                "diagnosticsProfile": {
                                    "bootDiagnostics": {
                                        "enabled": true
                                    }
                                }
                            }
                        },
                        {
                            "condition": "[not(equals(parameters('environment'), 'prod'))]",
                            "type": "Microsoft.DevTestLab/schedules",
                            "apiVersion": "2018-09-15",
                            "name": "[concat('shutdown-computevm-', parameters('vmName'), copyIndex(101))]",
                            "location": "[parameters('location')]",
                            "dependsOn": [
                                "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'), copyIndex(101))]"
                            ],
                            "copy": {
                                "name": "copy",
                                "count": "[parameters('vmcount')]"
                            },
                            "tags": "[parameters('tags')]",
                            "properties": {
                                "status": "Enabled",
                                "taskType": "ComputeVmShutdownTask",
                                "dailyRecurrence": {
                                    "time": "1900"
                                },
                                "timeZoneId": "Central Standard Time",
                                "targetResourceId": "[resourceId('Microsoft.Compute/virtualMachines', concat(parameters('vmName'), copyIndex(101)))]",
                                "notificationSettings": {
                                    "status": "Disabled"
                                }
                            }
                        }
                    ],
                    "outputs": {}
                }
            }
        },
        {
            "name": "[concat('nestedDeployment-step2-dataDisks-customScript-', variables('vmName'), copyIndex(101))]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'nestedDeployment-step1-virtualMachines')]"
            ],
            "copy": {
                "name": "copy",
                "count": "[parameters('vmcount')]"
            },
            "properties": {
                "expressionEvaluationOptions": {
                    "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                    "tags": {
                        "value": "[parameters('tags')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "vmName": {
                        "value": "[concat(variables('vmName'), copyIndex(101))]"
                    },
                    "customScriptFileUri": {
                        "value": "[parameters('customScriptFileUri')]"
                    },
                    "commandToExecute": {
                        "value": "[parameters('commandToExecute')]"
                    }
                },
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "tags": {
                            "type": "object"
                        },
                        "location": {
                            "type": "string"
                        },
                        "vmName": {
                            "type": "string"
                        },
                        "customScriptFileUri": {
                            "type": "string"
                        },
                        "commandToExecute": {
                            "type": "string"
                        }
                    },
                    "variables": {
                        "dataDisks": [
                            {
                                "lun":0,
                                "createOption":"attach",
                                "caching":"None",
                                "writeAcceleratorEnabled":false,
                                "id":null,
                                "storageAccountType":null,
                                "diskSizeGB":null,
                                "diskEncryptionSet":null
                            }
                        ],
                        "dataDiskResources": [
                            {
                                "name":"_DataDisk_0",
                                "sku":"Premium_LRS",
                                "properties":{
                                    "diskSizeGB":1024,
                                    "creationData":{
                                        "createOption":"empty"
                                    }
                                }
                            }
                        ]
                    },
                    "resources": [
                        {
                            "type": "Microsoft.Compute/disks",
                            "apiVersion": "2020-09-30",
                            "name": "[concat(parameters('vmName'), variables('dataDiskResources')[copyIndex()].name)]",
                            "location": "[parameters('location')]",
                            "tags": "[parameters('tags')]",
                            "sku": {
                                "name": "[variables('dataDiskResources')[copyIndex()].sku]"
                            },
                            "properties": "[variables('dataDiskResources')[copyIndex()].properties]",
                            "copy": {
                                "name": "managedDiskResources",
                                "count": "[length(variables('dataDiskResources'))]"
                            }
                        },
                        {
                            "type": "Microsoft.Compute/virtualMachines",
                            "apiVersion": "2021-07-01",
                            "name": "[parameters('vmName')]",
                            "location": "[parameters('location')]",
                            "dependsOn": [
                                "managedDiskResources"
                            ],
                            "properties": {
                                "storageProfile": {
                                    "copy": [
                                        {
                                            "name": "dataDisks",
                                            "count": "[length(variables('dataDisks'))]",
                                            "input": {
                                                "lun": "[variables('dataDisks')[copyIndex('dataDisks')].lun]",
                                                "createOption": "[variables('dataDisks')[copyIndex('dataDisks')].createOption]",
                                                "caching": "[variables('dataDisks')[copyIndex('dataDisks')].caching]",
                                                "diskSizeGB": "[variables('dataDisks')[copyIndex('dataDisks')].diskSizeGB]",
                                                "managedDisk": {
                                                    "id": "[coalesce(variables('dataDisks')[copyIndex('dataDisks')].id, if(equals(concat(parameters('vmName'), variables('dataDiskResources')[copyIndex('dataDisks')].name), json('null')), json('null'), resourceId('Microsoft.Compute/disks', concat(parameters('vmName'), variables('dataDiskResources')[copyIndex('dataDisks')].name))))]",
                                                    "storageAccountType": "[variables('dataDisks')[copyIndex('dataDisks')].storageAccountType]"
                                                },
                                                "writeAcceleratorEnabled": "[variables('dataDisks')[copyIndex('dataDisks')].writeAcceleratorEnabled]"
                                            }
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "type": "Microsoft.Compute/virtualMachines/extensions",
                            "apiVersion": "2019-03-01",
                            "name": "[concat(parameters('vmName'), '/FormatDataDisks')]",
                            "location": "[parameters('location')]",
                            "dependsOn": [
                                "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
                            ],
                            "properties": {
                                "publisher": "Microsoft.Azure.Extensions",
                                "type": "CustomScript",
                                "typeHandlerVersion": "2.1",
                                "autoUpgradeMinorVersion": true,
                                "settings": {},
                                "protectedSettings": {
                                    "fileUris": [
                                        "[parameters('customScriptFileUri')]"
                                    ],
                                    "commandToExecute": "[parameters('commandToExecute')]"
                                }
                            }
                        }
                    ],
                    "outputs": {}
                }
            }
        }
    ],
    "outputs": {
        "adminUsername": {
            "type": "String",
            "value": "[parameters('adminUsername')]"
        }
    }
}